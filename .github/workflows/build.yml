name: Create and publish a Docker image

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    branches: ['main']

# Defines two custom environment variables for the workflow. These are used for the Container
# registry domain, and a name for the Docker image that this workflow builds.
env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: racklet-hw-env

# There is a single job in this workflow. It's configured to run on the latest available version of
# Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-22.04
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Build image using Buildah action
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./${{ env.IMAGE_NAME }}/Containerfile
          image: ${{ env.IMAGE_NAME }}
          # todo autogenerate tags
          tags: |
            0.1.2
          # pass args to Containerfile using `ARG` statements
          # build-args: |
          #   ARG_NAME=ARG_VALUE
          oci: false

      - name: Push To GHCR
        uses: Wandalen/wretry.action@v1.4.10
        id: push
        if: github.event_name != 'pull_request'
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          action: redhat-actions/push-to-registry@v2
          attempt_limit: 3
          attempt_delay: 15000
          with: |
            image: ${{ steps.build_image.outputs.image }}
            tags: ${{ steps.build_image.outputs.tags }}
            registry: ${{ env.IMAGE_REGISTRY }}
            username: ${{ env.REGISTRY_USER }}
            password: ${{ env.REGISTRY_PASSWORD }}

      # Uses the `docker/login-action` action to log in to the Container registry registry using the
      # account and password that will publish the packages. Once published, the packages are scoped
      # to the account defined here.
      # - name: Log in to the Container registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

