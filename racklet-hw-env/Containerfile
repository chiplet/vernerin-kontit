FROM ubuntu:23.10

# Install common utilities from distribution package repository
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    zsh curl wget git git-lfs vim htop pkg-config build-essential gawk zip \
    openssl libssl-dev openjdk-17-jdk

# Install sbt (scala build tool)
RUN echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | tee /etc/apt/sources.list.d/sbt.list \
    && echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | tee /etc/apt/sources.list.d/sbt_old.list \
    && curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | apt-key add \
    && apt-get update \
    && apt-get install sbt

# Install third-party EDA tools
RUN mkdir /prog

# oss-cad-suite
RUN cd /prog \
    && wget -q https://github.com/YosysHQ/oss-cad-suite-build/releases/download/2024-03-20/oss-cad-suite-linux-x64-20240320.tgz \
    && tar --no-same-owner -xvzf oss-cad-suite-linux-x64-20240320.tgz \
    && rm -f oss-cad-suite-linux-x64-20240320.tgz

# doesn't get sourced when running in distrobox
RUN echo "source /prog/oss-cad-suite/environment" >> /root/.bashrc

# Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs \
    | sh -s -- --default-toolchain stable -y

ENV PATH=/root/.cargo/bin:$PATH

# surfer
# install binary release
RUN wget -q https://gitlab.com/api/v4/projects/42073614/packages/generic/surfer/0.1.0/surfer_linux_0.1.0.zip \
    && unzip surfer_linux_0.1.0.zip \
    && rm -f surfer_linux_0.1.0.zip \
    && mv surfer /bin

# compile from source (not ideal due to large rust build directory)
# RUN cargo install --git https://gitlab.com/surfer-project/surfer surfer

# RISC-V toolchain with required multilib configurations
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    autoconf automake autotools-dev curl python3 python3-pip libmpc-dev libmpfr-dev libgmp-dev \
    gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev libexpat-dev \
    ninja-build git cmake libglib2.0-dev libslirp-dev python3.11-venv python-is-python3
# long-ass build command to include cleanup in install step...
RUN git clone https://github.com/riscv-collab/riscv-gnu-toolchain.git \
    && cd riscv-gnu-toolchain \
    && ./configure --prefix=/prog/riscv --with-multilib-generator="rv32imf_zicsr-ilp32f--c;rv32im_zicsr-ilp32--c;rv32i_zicsr-ilp32--c;rv32if_zicsr-ilp32f--c;" \
    && make -j$(nproc) \
    && cd .. \
    && rm -fr riscv-gnu-toolchain

ENTRYPOINT [ "/bin/zsh" ]